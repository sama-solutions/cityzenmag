#!/usr/bin/env node\n\n/**\n * Script de test pour l'import Twitter\n * Usage: node scripts/test-twitter-import.cjs\n */\n\nconst { createClient } = require('@supabase/supabase-js')\n\n// Configuration Supabase\nconst supabaseUrl = process.env.VITE_SUPABASE_URL || \"https://ghpptudzucrnygrozpht.supabase.co\"\nconst supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY || \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdocHB0dWR6dWNybnlncm96cGh0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc2MzYzODUsImV4cCI6MjA3MzIxMjM4NX0.nJgb0WAdzxeCmPuxb6ttatYdraLWyrA2-z89JAnXwc4\"\n\nconst supabase = createClient(supabaseUrl, supabaseAnonKey)\n\nasync function testTwitterImport() {\n  console.log('🚀 Test d\\'import Twitter - Dernier thread')\n  console.log('='.repeat(50))\n  \n  try {\n    // Test de connexion\n    console.log('🔍 Test de connexion à Supabase...')\n    const { data: testData, error: testError } = await supabase\n      .from('threads')\n      .select('count')\n      .limit(1)\n    \n    if (testError) {\n      console.error('❌ Erreur de connexion Supabase:', testError.message)\n      return\n    }\n    \n    console.log('✅ Connexion Supabase OK')\n    \n    // Statut avant import\n    console.log('\\n📊 Statut avant import:')\n    const { count: threadsCount } = await supabase\n      .from('threads')\n      .select('*', { count: 'exact', head: true })\n    \n    const { count: tweetsCount } = await supabase\n      .from('tweets')\n      .select('*', { count: 'exact', head: true })\n    \n    const { count: mediaCount } = await supabase\n      .from('media_files')\n      .select('*', { count: 'exact', head: true })\n    \n    console.log(`   Threads: ${threadsCount || 0}`)\n    console.log(`   Tweets: ${tweetsCount || 0}`)\n    console.log(`   Médias: ${mediaCount || 0}`)\n    \n    // Appel de la fonction d'import\n    console.log('\\n🔄 Lancement de l\\'import du dernier thread...')\n    const startTime = Date.now()\n    \n    const { data, error } = await supabase.functions.invoke('twitter-sync', {\n      body: { \n        mode: 'latest',\n        limit: 20\n      }\n    })\n    \n    const duration = Date.now() - startTime\n    \n    if (error) {\n      console.error('❌ Erreur lors de l\\'import:', error.message)\n      console.error('Détails:', error)\n      return\n    }\n    \n    console.log('✅ Import terminé avec succès!')\n    console.log(`⏱️  Durée: ${duration}ms`)\n    \n    // Affichage des résultats\n    if (data?.data) {\n      console.log('\\n📈 Résultats de l\\'import:')\n      console.log(`   Mode: ${data.data.mode}`)\n      console.log(`   Threads traités: ${data.data.processed_threads}`)\n      console.log(`   Tweets traités: ${data.data.processed_tweets}`)\n      console.log(`   Médias traités: ${data.data.processed_media || 0}`)\n      console.log(`   Total conversations: ${data.data.total_conversations}`)\n      console.log(`   Timestamp: ${data.data.timestamp}`)\n    }\n    \n    // Statut après import\n    console.log('\\n📊 Statut après import:')\n    const { count: newThreadsCount } = await supabase\n      .from('threads')\n      .select('*', { count: 'exact', head: true })\n    \n    const { count: newTweetsCount } = await supabase\n      .from('tweets')\n      .select('*', { count: 'exact', head: true })\n    \n    const { count: newMediaCount } = await supabase\n      .from('media_files')\n      .select('*', { count: 'exact', head: true })\n    \n    console.log(`   Threads: ${newThreadsCount || 0} (+${(newThreadsCount || 0) - (threadsCount || 0)})`)\n    console.log(`   Tweets: ${newTweetsCount || 0} (+${(newTweetsCount || 0) - (tweetsCount || 0)})`)\n    console.log(`   Médias: ${newMediaCount || 0} (+${(newMediaCount || 0) - (mediaCount || 0)})`)\n    \n    // Affichage du dernier thread importé\n    console.log('\\n🧵 Dernier thread importé:')\n    const { data: latestThread } = await supabase\n      .from('threads')\n      .select('*')\n      .order('created_at', { ascending: false })\n      .limit(1)\n      .single()\n    \n    if (latestThread) {\n      console.log(`   ID: ${latestThread.thread_id}`)\n      console.log(`   Titre: ${latestThread.title}`)\n      console.log(`   Thème: ${latestThread.theme || 'N/A'}`)\n      console.log(`   Date: ${new Date(latestThread.date_created).toLocaleString('fr-FR')}`)\n      console.log(`   Tweets: ${latestThread.total_tweets}`)\n      console.log(`   Complet: ${latestThread.complete ? 'Oui' : 'Non'}`)\n    }\n    \n    console.log('\\n🎉 Test terminé avec succès!')\n    \n  } catch (error) {\n    console.error('💥 Erreur générale:', error.message)\n    console.error('Stack:', error.stack)\n  }\n}\n\n// Exécution du test\nif (require.main === module) {\n  testTwitterImport()\n    .then(() => process.exit(0))\n    .catch((error) => {\n      console.error('💥 Erreur fatale:', error)\n      process.exit(1)\n    })\n}\n\nmodule.exports = { testTwitterImport }"
  }
]